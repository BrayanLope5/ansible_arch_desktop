#!/usr/bin/env -S ansible-playbook -K

# This ansible playbook can be run locally using:
# ./local.yml
# as an executable and make the changes immediately.
# OR
# ansible-playbook local.yml -K
# OR we can use this command to run it without making any changes.
# ansible-playbook local.yml -K --diff --check

# Most tasks need root privileges and for those we specify become_user: root.
# For others we need to be the non-root user and for that we have the variable
# non_root_user: brayan.

- name: Setting Up PC
  vars:
    non_root_user: brayan
  hosts: localhost
  connection: local
  become: true
  become_method: sudo
  become_user: '{{non_root_user}}'

  pre_tasks:
    - name: Collect facts about system. No need for sudo.
      import_tasks: ansible/tasks/pre_tasks/non_root_pre_tasks.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Update using pacman and make backup if on btrfs system.
      import_tasks: ansible/tasks/pre_tasks/root_pre_tasks.yml
      become: true
      become_user: root

  tasks:
    - name: Install command line tools using pacman/yay.
      import_tasks: ansible/tasks/pacman_install_cli_apps.yml
      become: true
      become_user: root

    - name: Install GUI apps using pacman/yay.
      import_tasks: ansible/tasks/pacman_install_gui_apps.yml
      become: true
      become_user: root

    - name: Install hyprland pre-requisits using pacman/yay.
      import_tasks: ansible/tasks/pacman_hyprland.yml
      become: true
      become_user: root

    # - name: Install hyprland only packges with cargo.
    #   import_tasks: ansible/tasks/cargo_hyprland.yml
    #   become: true
    #   become_user: '{{non_root_user}}'

    - name: Install GUI apps using flatpak. No need for root permissions.
      import_tasks: ansible/tasks/flatpaks/flatpak_install_gui_apps.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Download binary releases from repos not found on arch.
      import_tasks: ansible/tasks/bin_utils/download_clipse.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Download binary release of slides.
      import_tasks: ansible/tasks/bin_utils/download_slides.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Download binary release of ltex-ls.
      import_tasks: ansible/tasks/bin_utils/download_ltexls.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Download binary release of dprint.
      import_tasks: ansible/tasks/bin_utils/download_dprint.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Download binary release of moar.
      import_tasks: ansible/tasks/bin_utils/download_moar.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Download binary release of nap.
      import_tasks: ansible/tasks/bin_utils/download_nap.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Download binary release of ventoy.
      import_tasks: ansible/tasks/bin_utils/download_ventoy.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Download binary release of wallust from codeberg.og.
      import_tasks: ansible/tasks/bin_utils/download_wallust.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Install pixi and rye packages.
      import_tasks: ansible/tasks/bin_utils/global_env_pckgs.yml
      become: true
      become_user: "{{non_root_user}}"

    - name: Manage open/closed ports and default zone.
      import_tasks: ansible/tasks/utils/firewalld.yml
      become: true
      become_user: root

    - name: Run make command for git-credential-libsecret.
      import_tasks: ansible/tasks/systemd/git_credential_libsecret.yml
      become: true
      become_user: root

    - name: Run shell commands for flatpak that don't have an ansible module.
      import_tasks: ansible/tasks/flatpaks/flatpak_overrides_and_settings.yml
      become: true
      become_user: root

    - name: Stop/disable ssh-agent service for non-root user.
      import_tasks: ansible/tasks/systemd/ssh.yml
      become: true
      become_user: '{{non_root_user}}'

    - name: Ethernet/Wifi. Stop/disable wpa_supplicant, enable/start NetworkManager, create minimial NetworkManager config to use iwd for wifi.
      import_tasks: ansible/tasks/systemd/ethernet_and_wifi.yml
      become: true
      become_user: root
